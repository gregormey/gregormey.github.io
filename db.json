{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/gregormey/source/css/config.scss","path":"css/config.scss","modified":0,"renderable":1},{"_id":"source/about/index/me.jpg","path":"about/index/me.jpg","modified":0,"renderable":0},{"_id":"themes/gregormey/source/css/reset.scss","path":"css/reset.scss","modified":0,"renderable":1},{"_id":"themes/gregormey/source/css/style.scss","path":"css/style.scss","modified":0,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"56543d51d3fdd92f8222b90481248edf80ae44cb","modified":1474659626000},{"_id":"themes/gregormey/_config.yml","hash":"a77ac90b23eacad765573ecc39f5bb2e39c058d4","modified":1473326174000},{"_id":"themes/gregormey/.DS_Store","hash":"4de4a95ac4e645bf22d9758d9e548840f12e2a22","modified":1473339237000},{"_id":"source/_drafts/.outsourcing-product-development.md.swp","hash":"2c4ec7601b0551285b1ecb2684abd7b5d476599a","modified":1474659799000},{"_id":"source/_drafts/outsourcing-product-development.md","hash":"4c74b2df39b3504609fa8eb8d664af80b17f175e","modified":1474659744000},{"_id":"source/_drafts/.DS_Store","hash":"30dc5ca889398ac83fcf462cc31b2f2e9c3a0ae2","modified":1474659632000},{"_id":"source/_posts/benefits-of-transparent-costs.md","hash":"0ebf778aa229a38af3d05059a412f68db943d475","modified":1473844465000},{"_id":"source/_posts/About.md","hash":"4369ec67ccd94bf2b4f66445ff0244c258b41db0","modified":1473433178000},{"_id":"source/_posts/stakeholder-collaboration.md","hash":"60e85c10d322a1b1dec9c534ea1c3127316da06d","modified":1474275966000},{"_id":"source/_posts/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1473780766000},{"_id":"source/about/.DS_Store","hash":"bc8b3e9e2bdaaeeaab365f527766dd46b1806cec","modified":1473944154000},{"_id":"source/about/index.md","hash":"72aa8eee4fd867d838dd01663b8c73f98a9be7f2","modified":1473335344000},{"_id":"themes/gregormey/layout/layout.ejs","hash":"2b3ba2ef85ff8f474f357d98a8d4a2ec5d98b729","modified":1473325018000},{"_id":"themes/gregormey/layout/index.ejs","hash":"41ab0756d12e7c9063b158c20681fe1481becde0","modified":1473782315000},{"_id":"themes/gregormey/layout/post.ejs","hash":"6fb253413fa73bfd6ad20324ae1b8f7d23f84458","modified":1473779405000},{"_id":"themes/gregormey/layout/page.ejs","hash":"107621a408be42f37fc06798e764b8224c29fa92","modified":1473325442000},{"_id":"themes/gregormey/layout/.DS_Store","hash":"f6b5609fdcdabfd67f9546fa02ba376b5833b1f5","modified":1473249693000},{"_id":"themes/gregormey/source/.DS_Store","hash":"6d2a672cd7843462deda9acec31bd16534c5ce59","modified":1473164901000},{"_id":"source/_posts/benefits-of-transparent-costs/lego.jpg","hash":"87f2f7a853c604975b85ca1515e741724b6f7b9e","modified":1473844465000},{"_id":"source/about/index/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1473068927000},{"_id":"themes/gregormey/layout/_partial/google-analytics.ejs","hash":"fc4cb980b12b2d0f9752154163f1267f8dbb2fef","modified":1473249562000},{"_id":"themes/gregormey/layout/_partial/disqus.ejs","hash":"6acc3845cb337e2519895c15d672bd8861b6cfeb","modified":1473325001000},{"_id":"themes/gregormey/layout/_partial/.DS_Store","hash":"fac70932e9c6b1743ed098a67c62e090c54b3032","modified":1473321012000},{"_id":"themes/gregormey/source/css/config.scss","hash":"cdc63a5ed2c3b843b51f79b15de4c50dbb9eea63","modified":1473234263000},{"_id":"source/about/index/me.jpg","hash":"1dcdcf13c0305e0a50da4da4a2e1ce411e121e3c","modified":1473011835000},{"_id":"themes/gregormey/source/css/reset.scss","hash":"a831e25cb539b24616249bb2259a27689f7826ec","modified":1473165034000},{"_id":"themes/gregormey/source/css/style.scss","hash":"f118ed747069e2aeb3d101715542cc8306e8a013","modified":1473855885000},{"_id":"source/_posts/benefits-of-transparent-costs/roadmap.png","hash":"0edbb7d6d0f2a9c43de405be2e46a46a3724a654","modified":1473844465000},{"_id":"source/_posts/stakeholder-collaboration/intention.png","hash":"4ec11c8556870756c6153186a07db655abd3b9d5","modified":1474275966000},{"_id":"source/_posts/stakeholder-collaboration/story_mapping.png","hash":"465d804d40efd62f0a58ad3bb4ac317c3eb66a3c","modified":1474275966000},{"_id":"source/_posts/stakeholder-collaboration/collabo.png","hash":"42e00a91c68b89135fc2a3fd4c4f8d7e8bed977f","modified":1474275966000},{"_id":"source/_drafts/outsourcing-product-development/value.png","hash":"d8d0b9bbf8fed0924dfe8d9e150e803547f9cab7","modified":1474572175000},{"_id":"source/_drafts/outsourcing-product-development/ratio.png","hash":"3e9486ceaa27b9727c746e5733961d6ca8b68b81","modified":1474572840000},{"_id":"source/_drafts/outsourcing-product-development/weighting.png","hash":"4ab4459d5446d62d49a4ab06e592b5e9e6490a33","modified":1474570560000},{"_id":"source/_drafts/outsourcing-product-development/questionnaire.xlsx","hash":"642f6e74cfcbf6ef28a3a2b276fa8e3b2a27ad49","modified":1474576965000}],"Category":[],"Data":[],"Page":[{"title":"About","date":"2016-08-27T18:20:41.000Z","_content":"\n![](./index/me.jpg \"Me\")\n\nMy name is Gregor Meyenberg. I am married, i have a little daughther and i live in Hamburg in Germany. Beside that i work as a Product Owner for [Goodgame Studios](https://www.goodgamestudios.com).\n\nIf you like to get in contact with me just leave a comment here or just write a [mail](mailto:gregor@meyenberg.de \"gregor@meyenberg.de\"). \n\nYou can also find me here: [GitHub](https://github.com/gregormey/), [Twitter](https://twitter.com/gregormey), [Xing](https://www.xing.com/profile/Gregor_Meyenberg) \n\nThis blog is made with [hexo.io](http://hexo.io) and the theme is copied from [getmicah.github.io](https://github.com/getmicah/getmicah.github.io) \n","source":"about/index.md","raw":"---\ntitle: About\ndate: 2016-08-27 20:20:41\n---\n\n![](./index/me.jpg \"Me\")\n\nMy name is Gregor Meyenberg. I am married, i have a little daughther and i live in Hamburg in Germany. Beside that i work as a Product Owner for [Goodgame Studios](https://www.goodgamestudios.com).\n\nIf you like to get in contact with me just leave a comment here or just write a [mail](mailto:gregor@meyenberg.de \"gregor@meyenberg.de\"). \n\nYou can also find me here: [GitHub](https://github.com/gregormey/), [Twitter](https://twitter.com/gregormey), [Xing](https://www.xing.com/profile/Gregor_Meyenberg) \n\nThis blog is made with [hexo.io](http://hexo.io) and the theme is copied from [getmicah.github.io](https://github.com/getmicah/getmicah.github.io) \n","updated":"2016-09-08T11:49:04.000Z","path":"about/index.html","comments":1,"layout":"page","_id":"citbk7qdm0008hgoudh11oi21","content":"<p><img src=\"./index/me.jpg\" alt=\"\" title=\"Me\"></p>\n<p>My name is Gregor Meyenberg. I am married, i have a little daughther and i live in Hamburg in Germany. Beside that i work as a Product Owner for <a href=\"https://www.goodgamestudios.com\" target=\"_blank\" rel=\"external\">Goodgame Studios</a>.</p>\n<p>If you like to get in contact with me just leave a comment here or just write a <a href=\"mailto:gregor@meyenberg.de\" title=\"gregor@meyenberg.de\" target=\"_blank\" rel=\"external\">mail</a>. </p>\n<p>You can also find me here: <a href=\"https://github.com/gregormey/\" target=\"_blank\" rel=\"external\">GitHub</a>, <a href=\"https://twitter.com/gregormey\" target=\"_blank\" rel=\"external\">Twitter</a>, <a href=\"https://www.xing.com/profile/Gregor_Meyenberg\" target=\"_blank\" rel=\"external\">Xing</a> </p>\n<p>This blog is made with <a href=\"http://hexo.io\" target=\"_blank\" rel=\"external\">hexo.io</a> and the theme is copied from <a href=\"https://github.com/getmicah/getmicah.github.io\" target=\"_blank\" rel=\"external\">getmicah.github.io</a> </p>\n","excerpt":"","more":"<p><img src=\"./index/me.jpg\" alt=\"\" title=\"Me\"></p>\n<p>My name is Gregor Meyenberg. I am married, i have a little daughther and i live in Hamburg in Germany. Beside that i work as a Product Owner for <a href=\"https://www.goodgamestudios.com\">Goodgame Studios</a>.</p>\n<p>If you like to get in contact with me just leave a comment here or just write a <a href=\"mailto:gregor@meyenberg.de\" title=\"gregor@meyenberg.de\">mail</a>. </p>\n<p>You can also find me here: <a href=\"https://github.com/gregormey/\">GitHub</a>, <a href=\"https://twitter.com/gregormey\">Twitter</a>, <a href=\"https://www.xing.com/profile/Gregor_Meyenberg\">Xing</a> </p>\n<p>This blog is made with <a href=\"http://hexo.io\">hexo.io</a> and the theme is copied from <a href=\"https://github.com/getmicah/getmicah.github.io\">getmicah.github.io</a> </p>\n"}],"Post":[{"title":"Outsourcing product development","_content":"I think outsourcing is a valid option to compensate missing inhouse skills or resources, but the decision for outsourcing always accompanies a certain risk. In my career i have seen companies that deal with outsourcing quite different. \n<!-- more -->\n\nSometimes companies try to outsource as much product development as possible for cost reasons. Others suffered from the [not invented here syndrome](https://en.wikipedia.org/wiki/Not_invented_here). Some time i even worked for a company whose core business was to do development as a service for other companies. I like to share my experiences with that here in detail.    \n\n## Know your core domain\nThe most important lesson i have learned so far is that outsourcing always means to give up control. So i think the question companies should be able to answer, when they consider to outsource product development is, for which area of their business they can afford to give up control.\n \nI think companies should always keep control of their [drivers of the business model](http://www.startuplessonslearned.com/2008/09/three-drivers-of-growth-for-your.html), because here it is crucial to be stay flexible and to align as fast as possible when it is needed. In that area the entrepreneurial risk is always very high. \n\nBut today companies need to deal with lots of different domains beside their core business. In a product development company that could be also:\n\n- Marketing\n- HR\n- Public Relations\n- Community Management\n\nDomain Driven Design differs here between three different types of [domains](http://blog.zenmodeler.com/enterprise-design/2012/05/29/domain-driven-design-distillation-support-generic-and-core-domain.html):  \n\n- *Generic Domain*\n A generic domain is one that is universally well-known, without any need for specialization in the core domain.\n\n- *Supporting Doamin* \nA support domain is a part of the domain that indirectly supports the core domain without actually belonging to it.\n\n- *Core Domain* \nThe core domain is the part of the domain most closely associated with the strategy of the company.\n\nIt is not a big deal to outsource issues in a generic domain. It is a common practise to use third party software for topics like payroll or accounting. [Datev](https://www.datev.com) is one widespread example. While outsourcing in a core domain is not advisable, it can make sense in a supporting domain. Here a company should consider, if it is worth to take a risk to get one or more of the following advantages from a external partner:\n\n- Availability\n- Additional competences\n- Reduced entrepreneurial risk, because permanently hiring of new employees is not required    \n\n## Keep control\nAs already mentioned the risk of outsourcing is about the loss of control. Agile product management offers several methods to reduce the loss of control. That means it is important that an external partner is willing to establish an agile process with you. Of course this usually means that you shift some risk to the partners side. In the end it is about divide the risk as fair as possible.  \n\nBoris Gloger describes in his book [\"Der agile Festpreis\"](https://www.amazon.de/agile-Festpreis-Leitfaden-erfolgreiche-Projekt-Verträge/dp/3446432264) how to set up an agile contract with an external partner. In my opinion, it does not matter if you choose this or a less official way, the important points are as follow:\n\n- An iterative process including regular reviews (e.g. Scrum).\n- After every iteration the customer has the opportunity to stop the project or to give the job for the next iteration instead of just paying for time and material. \n- The whole process has to aim for delivering something valuable at the end of every iteration, which is usually working software.\n- There is the possibility to adjust the requirements at least after every iteration to benefit from the learned during the work.\n- The partner commits to reach a goal with you and not to just implement requirements.\n- Direct communication is always possible.\n- The sprint length is negotiable. Faster feedback vs. the possibility to deliver working software. \n\n## How to choose an external partner\nIt is literally impossible to choose a good external partner just by the price. The price is a factor, but i think it should be the last attribute to look at. Hence there must be a different way to objectively evaluate a partner. In one of my last projects we did it with a \tvalue benefit analysis.\n\n### Value benefit analysis\nIn the first step we had to find criteria were we could benefit from a external partner or which are required to lower the risk for us beside the price. In our case it were the following: \n\n- Availability\n- Competence\n- Process control\n- Risk share\n- Quality\n\nThen we assembled a questionnaire with questions we considered as important for every criteria. Download the full document [here](./questionnaire.xlsx).\n\nFor every question we also formulated an ideal answer. We weighted every question on a scale from 1 (not important) to 10(very important) for us. To be able to transform the weighting to a score we calculated the ratio in percent of every question from the total amount of weighting points.\n\n{% asset_img weighting.png calculate weighting in percent %}\n\nA side effect of that was that when we accumulated the points per criteria, we were able to see which criteria was the most important for us. \n \nThe questionnaire was send to the partners, so that they could answer. After we got all the answers we ranked them on a scale from 1(not what we expect) to 10(very close to the ideal answer). In combination with the weighting in percent we were now able to generate a score per partner from 1 to 10.\n\n{% asset_img value.png calculate value score %}\n\nIn the last step we were able to find the best partner by the ratio between the price and the achieved score.\n\n{% asset_img ratio.png find partner by ratio %}\n\n## Conclusion \n","source":"_drafts/outsourcing-product-development.md","raw":"---\ntitle: Outsourcing product development\ntags:\n- DDD\n- product management\n- aglie\n---\nI think outsourcing is a valid option to compensate missing inhouse skills or resources, but the decision for outsourcing always accompanies a certain risk. In my career i have seen companies that deal with outsourcing quite different. \n<!-- more -->\n\nSometimes companies try to outsource as much product development as possible for cost reasons. Others suffered from the [not invented here syndrome](https://en.wikipedia.org/wiki/Not_invented_here). Some time i even worked for a company whose core business was to do development as a service for other companies. I like to share my experiences with that here in detail.    \n\n## Know your core domain\nThe most important lesson i have learned so far is that outsourcing always means to give up control. So i think the question companies should be able to answer, when they consider to outsource product development is, for which area of their business they can afford to give up control.\n \nI think companies should always keep control of their [drivers of the business model](http://www.startuplessonslearned.com/2008/09/three-drivers-of-growth-for-your.html), because here it is crucial to be stay flexible and to align as fast as possible when it is needed. In that area the entrepreneurial risk is always very high. \n\nBut today companies need to deal with lots of different domains beside their core business. In a product development company that could be also:\n\n- Marketing\n- HR\n- Public Relations\n- Community Management\n\nDomain Driven Design differs here between three different types of [domains](http://blog.zenmodeler.com/enterprise-design/2012/05/29/domain-driven-design-distillation-support-generic-and-core-domain.html):  \n\n- *Generic Domain*\n A generic domain is one that is universally well-known, without any need for specialization in the core domain.\n\n- *Supporting Doamin* \nA support domain is a part of the domain that indirectly supports the core domain without actually belonging to it.\n\n- *Core Domain* \nThe core domain is the part of the domain most closely associated with the strategy of the company.\n\nIt is not a big deal to outsource issues in a generic domain. It is a common practise to use third party software for topics like payroll or accounting. [Datev](https://www.datev.com) is one widespread example. While outsourcing in a core domain is not advisable, it can make sense in a supporting domain. Here a company should consider, if it is worth to take a risk to get one or more of the following advantages from a external partner:\n\n- Availability\n- Additional competences\n- Reduced entrepreneurial risk, because permanently hiring of new employees is not required    \n\n## Keep control\nAs already mentioned the risk of outsourcing is about the loss of control. Agile product management offers several methods to reduce the loss of control. That means it is important that an external partner is willing to establish an agile process with you. Of course this usually means that you shift some risk to the partners side. In the end it is about divide the risk as fair as possible.  \n\nBoris Gloger describes in his book [\"Der agile Festpreis\"](https://www.amazon.de/agile-Festpreis-Leitfaden-erfolgreiche-Projekt-Verträge/dp/3446432264) how to set up an agile contract with an external partner. In my opinion, it does not matter if you choose this or a less official way, the important points are as follow:\n\n- An iterative process including regular reviews (e.g. Scrum).\n- After every iteration the customer has the opportunity to stop the project or to give the job for the next iteration instead of just paying for time and material. \n- The whole process has to aim for delivering something valuable at the end of every iteration, which is usually working software.\n- There is the possibility to adjust the requirements at least after every iteration to benefit from the learned during the work.\n- The partner commits to reach a goal with you and not to just implement requirements.\n- Direct communication is always possible.\n- The sprint length is negotiable. Faster feedback vs. the possibility to deliver working software. \n\n## How to choose an external partner\nIt is literally impossible to choose a good external partner just by the price. The price is a factor, but i think it should be the last attribute to look at. Hence there must be a different way to objectively evaluate a partner. In one of my last projects we did it with a \tvalue benefit analysis.\n\n### Value benefit analysis\nIn the first step we had to find criteria were we could benefit from a external partner or which are required to lower the risk for us beside the price. In our case it were the following: \n\n- Availability\n- Competence\n- Process control\n- Risk share\n- Quality\n\nThen we assembled a questionnaire with questions we considered as important for every criteria. Download the full document [here](./questionnaire.xlsx).\n\nFor every question we also formulated an ideal answer. We weighted every question on a scale from 1 (not important) to 10(very important) for us. To be able to transform the weighting to a score we calculated the ratio in percent of every question from the total amount of weighting points.\n\n{% asset_img weighting.png calculate weighting in percent %}\n\nA side effect of that was that when we accumulated the points per criteria, we were able to see which criteria was the most important for us. \n \nThe questionnaire was send to the partners, so that they could answer. After we got all the answers we ranked them on a scale from 1(not what we expect) to 10(very close to the ideal answer). In combination with the weighting in percent we were now able to generate a score per partner from 1 to 10.\n\n{% asset_img value.png calculate value score %}\n\nIn the last step we were able to find the best partner by the ratio between the price and the achieved score.\n\n{% asset_img ratio.png find partner by ratio %}\n\n## Conclusion \n","slug":"outsourcing-product-development","published":0,"date":"2016-09-23T19:42:24.000Z","updated":"2016-09-23T19:42:24.000Z","_id":"citbk7qcv0000hgou3js5rbjp","comments":1,"layout":"post","photos":[],"link":"","content":"<p>I think outsourcing is a valid option to compensate missing inhouse skills or resources, but the decision for outsourcing always accompanies a certain risk. In my career i have seen companies that deal with outsourcing quite different.<br><a id=\"more\"></a></p>\n<p>Sometimes companies try to outsource as much product development as possible for cost reasons. Others suffered from the <a href=\"https://en.wikipedia.org/wiki/Not_invented_here\" target=\"_blank\" rel=\"external\">not invented here syndrome</a>. Some time i even worked for a company whose core business was to do development as a service for other companies. I like to share my experiences with that here in detail.    </p>\n<h2 id=\"Know-your-core-domain\"><a href=\"#Know-your-core-domain\" class=\"headerlink\" title=\"Know your core domain\"></a>Know your core domain</h2><p>The most important lesson i have learned so far is that outsourcing always means to give up control. So i think the question companies should be able to answer, when they consider to outsource product development is, for which area of their business they can afford to give up control.</p>\n<p>I think companies should always keep control of their <a href=\"http://www.startuplessonslearned.com/2008/09/three-drivers-of-growth-for-your.html\" target=\"_blank\" rel=\"external\">drivers of the business model</a>, because here it is crucial to be stay flexible and to align as fast as possible when it is needed. In that area the entrepreneurial risk is always very high. </p>\n<p>But today companies need to deal with lots of different domains beside their core business. In a product development company that could be also:</p>\n<ul>\n<li>Marketing</li>\n<li>HR</li>\n<li>Public Relations</li>\n<li>Community Management</li>\n</ul>\n<p>Domain Driven Design differs here between three different types of <a href=\"http://blog.zenmodeler.com/enterprise-design/2012/05/29/domain-driven-design-distillation-support-generic-and-core-domain.html\" target=\"_blank\" rel=\"external\">domains</a>:  </p>\n<ul>\n<li><p><em>Generic Domain</em><br>A generic domain is one that is universally well-known, without any need for specialization in the core domain.</p>\n</li>\n<li><p><em>Supporting Doamin</em><br>A support domain is a part of the domain that indirectly supports the core domain without actually belonging to it.</p>\n</li>\n<li><p><em>Core Domain</em><br>The core domain is the part of the domain most closely associated with the strategy of the company.</p>\n</li>\n</ul>\n<p>It is not a big deal to outsource issues in a generic domain. It is a common practise to use third party software for topics like payroll or accounting. <a href=\"https://www.datev.com\" target=\"_blank\" rel=\"external\">Datev</a> is one widespread example. While outsourcing in a core domain is not advisable, it can make sense in a supporting domain. Here a company should consider, if it is worth to take a risk to get one or more of the following advantages from a external partner:</p>\n<ul>\n<li>Availability</li>\n<li>Additional competences</li>\n<li>Reduced entrepreneurial risk, because permanently hiring of new employees is not required    </li>\n</ul>\n<h2 id=\"Keep-control\"><a href=\"#Keep-control\" class=\"headerlink\" title=\"Keep control\"></a>Keep control</h2><p>As already mentioned the risk of outsourcing is about the loss of control. Agile product management offers several methods to reduce the loss of control. That means it is important that an external partner is willing to establish an agile process with you. Of course this usually means that you shift some risk to the partners side. In the end it is about divide the risk as fair as possible.  </p>\n<p>Boris Gloger describes in his book <a href=\"https://www.amazon.de/agile-Festpreis-Leitfaden-erfolgreiche-Projekt-Verträge/dp/3446432264\" target=\"_blank\" rel=\"external\">“Der agile Festpreis”</a> how to set up an agile contract with an external partner. In my opinion, it does not matter if you choose this or a less official way, the important points are as follow:</p>\n<ul>\n<li>An iterative process including regular reviews (e.g. Scrum).</li>\n<li>After every iteration the customer has the opportunity to stop the project or to give the job for the next iteration instead of just paying for time and material. </li>\n<li>The whole process has to aim for delivering something valuable at the end of every iteration, which is usually working software.</li>\n<li>There is the possibility to adjust the requirements at least after every iteration to benefit from the learned during the work.</li>\n<li>The partner commits to reach a goal with you and not to just implement requirements.</li>\n<li>Direct communication is always possible.</li>\n<li>The sprint length is negotiable. Faster feedback vs. the possibility to deliver working software. </li>\n</ul>\n<h2 id=\"How-to-choose-an-external-partner\"><a href=\"#How-to-choose-an-external-partner\" class=\"headerlink\" title=\"How to choose an external partner\"></a>How to choose an external partner</h2><p>It is literally impossible to choose a good external partner just by the price. The price is a factor, but i think it should be the last attribute to look at. Hence there must be a different way to objectively evaluate a partner. In one of my last projects we did it with a     value benefit analysis.</p>\n<h3 id=\"Value-benefit-analysis\"><a href=\"#Value-benefit-analysis\" class=\"headerlink\" title=\"Value benefit analysis\"></a>Value benefit analysis</h3><p>In the first step we had to find criteria were we could benefit from a external partner or which are required to lower the risk for us beside the price. In our case it were the following: </p>\n<ul>\n<li>Availability</li>\n<li>Competence</li>\n<li>Process control</li>\n<li>Risk share</li>\n<li>Quality</li>\n</ul>\n<p>Then we assembled a questionnaire with questions we considered as important for every criteria. Download the full document <a href=\"./questionnaire.xlsx\">here</a>.</p>\n<p>For every question we also formulated an ideal answer. We weighted every question on a scale from 1 (not important) to 10(very important) for us. To be able to transform the weighting to a score we calculated the ratio in percent of every question from the total amount of weighting points.</p>\n<img src=\"/2016/09/23/outsourcing-product-development/weighting.png\" alt=\"calculate weighting in percent\" title=\"calculate weighting in percent\">\n<p>A side effect of that was that when we accumulated the points per criteria, we were able to see which criteria was the most important for us. </p>\n<p>The questionnaire was send to the partners, so that they could answer. After we got all the answers we ranked them on a scale from 1(not what we expect) to 10(very close to the ideal answer). In combination with the weighting in percent we were now able to generate a score per partner from 1 to 10.</p>\n<img src=\"/2016/09/23/outsourcing-product-development/value.png\" alt=\"calculate value score\" title=\"calculate value score\">\n<p>In the last step we were able to find the best partner by the ratio between the price and the achieved score.</p>\n<img src=\"/2016/09/23/outsourcing-product-development/ratio.png\" alt=\"find partner by ratio\" title=\"find partner by ratio\">\n<h2 id=\"Conclusion\"><a href=\"#Conclusion\" class=\"headerlink\" title=\"Conclusion\"></a>Conclusion</h2>","excerpt":"<p>I think outsourcing is a valid option to compensate missing inhouse skills or resources, but the decision for outsourcing always accompanies a certain risk. In my career i have seen companies that deal with outsourcing quite different.<br>","more":"</p>\n<p>Sometimes companies try to outsource as much product development as possible for cost reasons. Others suffered from the <a href=\"https://en.wikipedia.org/wiki/Not_invented_here\">not invented here syndrome</a>. Some time i even worked for a company whose core business was to do development as a service for other companies. I like to share my experiences with that here in detail.    </p>\n<h2 id=\"Know-your-core-domain\"><a href=\"#Know-your-core-domain\" class=\"headerlink\" title=\"Know your core domain\"></a>Know your core domain</h2><p>The most important lesson i have learned so far is that outsourcing always means to give up control. So i think the question companies should be able to answer, when they consider to outsource product development is, for which area of their business they can afford to give up control.</p>\n<p>I think companies should always keep control of their <a href=\"http://www.startuplessonslearned.com/2008/09/three-drivers-of-growth-for-your.html\">drivers of the business model</a>, because here it is crucial to be stay flexible and to align as fast as possible when it is needed. In that area the entrepreneurial risk is always very high. </p>\n<p>But today companies need to deal with lots of different domains beside their core business. In a product development company that could be also:</p>\n<ul>\n<li>Marketing</li>\n<li>HR</li>\n<li>Public Relations</li>\n<li>Community Management</li>\n</ul>\n<p>Domain Driven Design differs here between three different types of <a href=\"http://blog.zenmodeler.com/enterprise-design/2012/05/29/domain-driven-design-distillation-support-generic-and-core-domain.html\">domains</a>:  </p>\n<ul>\n<li><p><em>Generic Domain</em><br>A generic domain is one that is universally well-known, without any need for specialization in the core domain.</p>\n</li>\n<li><p><em>Supporting Doamin</em><br>A support domain is a part of the domain that indirectly supports the core domain without actually belonging to it.</p>\n</li>\n<li><p><em>Core Domain</em><br>The core domain is the part of the domain most closely associated with the strategy of the company.</p>\n</li>\n</ul>\n<p>It is not a big deal to outsource issues in a generic domain. It is a common practise to use third party software for topics like payroll or accounting. <a href=\"https://www.datev.com\">Datev</a> is one widespread example. While outsourcing in a core domain is not advisable, it can make sense in a supporting domain. Here a company should consider, if it is worth to take a risk to get one or more of the following advantages from a external partner:</p>\n<ul>\n<li>Availability</li>\n<li>Additional competences</li>\n<li>Reduced entrepreneurial risk, because permanently hiring of new employees is not required    </li>\n</ul>\n<h2 id=\"Keep-control\"><a href=\"#Keep-control\" class=\"headerlink\" title=\"Keep control\"></a>Keep control</h2><p>As already mentioned the risk of outsourcing is about the loss of control. Agile product management offers several methods to reduce the loss of control. That means it is important that an external partner is willing to establish an agile process with you. Of course this usually means that you shift some risk to the partners side. In the end it is about divide the risk as fair as possible.  </p>\n<p>Boris Gloger describes in his book <a href=\"https://www.amazon.de/agile-Festpreis-Leitfaden-erfolgreiche-Projekt-Verträge/dp/3446432264\">“Der agile Festpreis”</a> how to set up an agile contract with an external partner. In my opinion, it does not matter if you choose this or a less official way, the important points are as follow:</p>\n<ul>\n<li>An iterative process including regular reviews (e.g. Scrum).</li>\n<li>After every iteration the customer has the opportunity to stop the project or to give the job for the next iteration instead of just paying for time and material. </li>\n<li>The whole process has to aim for delivering something valuable at the end of every iteration, which is usually working software.</li>\n<li>There is the possibility to adjust the requirements at least after every iteration to benefit from the learned during the work.</li>\n<li>The partner commits to reach a goal with you and not to just implement requirements.</li>\n<li>Direct communication is always possible.</li>\n<li>The sprint length is negotiable. Faster feedback vs. the possibility to deliver working software. </li>\n</ul>\n<h2 id=\"How-to-choose-an-external-partner\"><a href=\"#How-to-choose-an-external-partner\" class=\"headerlink\" title=\"How to choose an external partner\"></a>How to choose an external partner</h2><p>It is literally impossible to choose a good external partner just by the price. The price is a factor, but i think it should be the last attribute to look at. Hence there must be a different way to objectively evaluate a partner. In one of my last projects we did it with a     value benefit analysis.</p>\n<h3 id=\"Value-benefit-analysis\"><a href=\"#Value-benefit-analysis\" class=\"headerlink\" title=\"Value benefit analysis\"></a>Value benefit analysis</h3><p>In the first step we had to find criteria were we could benefit from a external partner or which are required to lower the risk for us beside the price. In our case it were the following: </p>\n<ul>\n<li>Availability</li>\n<li>Competence</li>\n<li>Process control</li>\n<li>Risk share</li>\n<li>Quality</li>\n</ul>\n<p>Then we assembled a questionnaire with questions we considered as important for every criteria. Download the full document <a href=\"./questionnaire.xlsx\">here</a>.</p>\n<p>For every question we also formulated an ideal answer. We weighted every question on a scale from 1 (not important) to 10(very important) for us. To be able to transform the weighting to a score we calculated the ratio in percent of every question from the total amount of weighting points.</p>\n<img src=\"/2016/09/23/outsourcing-product-development/weighting.png\" alt=\"calculate weighting in percent\" title=\"calculate weighting in percent\">\n<p>A side effect of that was that when we accumulated the points per criteria, we were able to see which criteria was the most important for us. </p>\n<p>The questionnaire was send to the partners, so that they could answer. After we got all the answers we ranked them on a scale from 1(not what we expect) to 10(very close to the ideal answer). In combination with the weighting in percent we were now able to generate a score per partner from 1 to 10.</p>\n<img src=\"/2016/09/23/outsourcing-product-development/value.png\" alt=\"calculate value score\" title=\"calculate value score\">\n<p>In the last step we were able to find the best partner by the ratio between the price and the achieved score.</p>\n<img src=\"/2016/09/23/outsourcing-product-development/ratio.png\" alt=\"find partner by ratio\" title=\"find partner by ratio\">\n<h2 id=\"Conclusion\"><a href=\"#Conclusion\" class=\"headerlink\" title=\"Conclusion\"></a>Conclusion</h2>"},{"title":"Benefits of transparent costs","date":"2016-09-14T09:14:25.000Z","_content":"\n\nIn my last project I experienced the advantages of making development costs transparent, and I would like to share that here.\n<!-- more -->\nWhen a product is developed, the intention is to generate a specific result (outcome) with it. Development requires effort. Effort is the input to gain the outcome. It is essential knowing the actual investment for this in order to decide which direction to take.\n\nHence it is required to measure the input. This leads to the question of how is it actually possible to measure input properly?\n\nMeasuring input in [Story Points](https://www.mountaingoatsoftware.com/blog/what-are-story-points) or in men days are a widely known practice, but in the end these measurements are just an abstraction for what really matters for a company, which is the costs defined in money.\n\n## Why not Story Points ?\nStory points are an abstraction of time that is needed to deliver something, as described by Mike Cohn [Story Points Are Still About Effort](https://www.mountaingoatsoftware.com/blog/story-points-are-still-about-effort). \n\nBut in my opinion, the question about how long it takes to deliver something is in the end more a question about how high the investment is for the delivery. It is hard to transform story points into money.\n\n*Examples:*\n- A team of 5 developers costs 25.000 € per sprint \n- The team has a velocity of 60 story points\n- The smallest possible unit that can be estimated is 1 story point. E.g. a task of 1 hour effort is estimated as 1.\n1 story point costs  416 € (25.000 € / 60)\n- But the normal cost per development hour is just 62,5 € (25.000 € / 5 Developer / 10 working days / 8 working hours )\n\nThe example shows that Story points do not equal time and therefore they are not suitable to calculate investments.\n\n## Why not just use time?\nDevelopment time is just one of several factors that needs to be taken into account for cost calculations. Others are:\n- [Cost of delay](http://blackswanfarming.com/cost-of-delay/)\n- Team Size, how many people are working in the team for a product\n- Cost of operation\n\nBesides that, time is usually conversely proportional to money. Getting something faster usually means it becomes more expensive. In very rare cases the development can be done faster with larger teams, larger teams are more expensive.  In most cases teams try to speed up the process by lowering the quality, but this will lead to follow up costs due to technical debts.\n\n> \"Greg Young on the other hand, has talked on several occasions about how technical debt is not necessarily bad. Businesses take loans all the time. They are a powerful tool to make an investment now, and pay for it later. It’s a fundamental aspect of our economy.\"\nhttp://verraes.net/2013/07/managed-technical-debt/\n\n## How to calculate costs\nBeside the cost of delay it is important to know the general team costs, which are cost of operation plus personnel costs. For the final calculation, hardware costs comes on top. For different reasons it is true, that salaries of team members should not be transparent.\n\nIn my current team we use an average per team member which is calculated over the salaries of the whole department including leads. That means that the team costs are calculated by Number of Team Members * Average Department Salary.\n\nThe costs are calculated on a monthly basis but are reported on product cost centers. This is beneficial because the outcome for a company comes from the products and not from the teams, so we want to know the investment we have to take for a dedicated product.\n\nWe split the team costs based on a monthly effort ratio in percent per product. When a team has to handle more than one product like it is in my case, we track the time spend on a product with [Lego Time Tracking](http://www.filamentpd.com/lego-time-tracking/).\n{% asset_img lego.jpg Lego Time Tracking %}\n\n## How to forecast costs\nIt is not possible to forecast costs. You can only estimate costs, but estimates have the problem, that they are always wrong.\n- http://noestimates.org/blog/\n\n## How to estimate costs\nAs a Product Owner I design my roadmap around [goals](https://scrumburg.wordpress.com/2016/06/30/business-value-poker-and-more-po-tools-nr-3/) that bring valuable outcome. We also estimate the costs for the goals, so that I can see the ratio between input and outcome.\n\nBefore the question “How long does it take?” I prefer the question: “How much time do we want to give us to reach that goal?”\n{% asset_img roadmap.png Roadmap with costs assigned to goals %}\n\n## Conclusion\nI think it is valuable for the process of product development to make costs transparent to everybody involved. With the knowledge of the cost everybody in a company can take important decisions or can better understand the motivation behind them.\n\nIt also prevents a team from wasting development time, because it makes everybody aware of the investment. In my experience this also helps to increase the commitment of everybody to their product.\n\nWith the above mentioned methods, product owners are able to define the relation between input and outcome and get a powerful tool to measure the return of investment for certain deliveries.\n\n","source":"_posts/benefits-of-transparent-costs.md","raw":"---\ntitle: Benefits of transparent costs\ntags:\n  - planning\n  - product management\n  - agile\ndate: 2016-09-14 11:14:25\n---\n\n\nIn my last project I experienced the advantages of making development costs transparent, and I would like to share that here.\n<!-- more -->\nWhen a product is developed, the intention is to generate a specific result (outcome) with it. Development requires effort. Effort is the input to gain the outcome. It is essential knowing the actual investment for this in order to decide which direction to take.\n\nHence it is required to measure the input. This leads to the question of how is it actually possible to measure input properly?\n\nMeasuring input in [Story Points](https://www.mountaingoatsoftware.com/blog/what-are-story-points) or in men days are a widely known practice, but in the end these measurements are just an abstraction for what really matters for a company, which is the costs defined in money.\n\n## Why not Story Points ?\nStory points are an abstraction of time that is needed to deliver something, as described by Mike Cohn [Story Points Are Still About Effort](https://www.mountaingoatsoftware.com/blog/story-points-are-still-about-effort). \n\nBut in my opinion, the question about how long it takes to deliver something is in the end more a question about how high the investment is for the delivery. It is hard to transform story points into money.\n\n*Examples:*\n- A team of 5 developers costs 25.000 € per sprint \n- The team has a velocity of 60 story points\n- The smallest possible unit that can be estimated is 1 story point. E.g. a task of 1 hour effort is estimated as 1.\n1 story point costs  416 € (25.000 € / 60)\n- But the normal cost per development hour is just 62,5 € (25.000 € / 5 Developer / 10 working days / 8 working hours )\n\nThe example shows that Story points do not equal time and therefore they are not suitable to calculate investments.\n\n## Why not just use time?\nDevelopment time is just one of several factors that needs to be taken into account for cost calculations. Others are:\n- [Cost of delay](http://blackswanfarming.com/cost-of-delay/)\n- Team Size, how many people are working in the team for a product\n- Cost of operation\n\nBesides that, time is usually conversely proportional to money. Getting something faster usually means it becomes more expensive. In very rare cases the development can be done faster with larger teams, larger teams are more expensive.  In most cases teams try to speed up the process by lowering the quality, but this will lead to follow up costs due to technical debts.\n\n> \"Greg Young on the other hand, has talked on several occasions about how technical debt is not necessarily bad. Businesses take loans all the time. They are a powerful tool to make an investment now, and pay for it later. It’s a fundamental aspect of our economy.\"\nhttp://verraes.net/2013/07/managed-technical-debt/\n\n## How to calculate costs\nBeside the cost of delay it is important to know the general team costs, which are cost of operation plus personnel costs. For the final calculation, hardware costs comes on top. For different reasons it is true, that salaries of team members should not be transparent.\n\nIn my current team we use an average per team member which is calculated over the salaries of the whole department including leads. That means that the team costs are calculated by Number of Team Members * Average Department Salary.\n\nThe costs are calculated on a monthly basis but are reported on product cost centers. This is beneficial because the outcome for a company comes from the products and not from the teams, so we want to know the investment we have to take for a dedicated product.\n\nWe split the team costs based on a monthly effort ratio in percent per product. When a team has to handle more than one product like it is in my case, we track the time spend on a product with [Lego Time Tracking](http://www.filamentpd.com/lego-time-tracking/).\n{% asset_img lego.jpg Lego Time Tracking %}\n\n## How to forecast costs\nIt is not possible to forecast costs. You can only estimate costs, but estimates have the problem, that they are always wrong.\n- http://noestimates.org/blog/\n\n## How to estimate costs\nAs a Product Owner I design my roadmap around [goals](https://scrumburg.wordpress.com/2016/06/30/business-value-poker-and-more-po-tools-nr-3/) that bring valuable outcome. We also estimate the costs for the goals, so that I can see the ratio between input and outcome.\n\nBefore the question “How long does it take?” I prefer the question: “How much time do we want to give us to reach that goal?”\n{% asset_img roadmap.png Roadmap with costs assigned to goals %}\n\n## Conclusion\nI think it is valuable for the process of product development to make costs transparent to everybody involved. With the knowledge of the cost everybody in a company can take important decisions or can better understand the motivation behind them.\n\nIt also prevents a team from wasting development time, because it makes everybody aware of the investment. In my experience this also helps to increase the commitment of everybody to their product.\n\nWith the above mentioned methods, product owners are able to define the relation between input and outcome and get a powerful tool to measure the return of investment for certain deliveries.\n\n","slug":"benefits-of-transparent-costs","published":1,"updated":"2016-09-14T09:14:25.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"citbk7qdl0007hgoupe76vv2r","content":"<p>In my last project I experienced the advantages of making development costs transparent, and I would like to share that here.<br><a id=\"more\"></a><br>When a product is developed, the intention is to generate a specific result (outcome) with it. Development requires effort. Effort is the input to gain the outcome. It is essential knowing the actual investment for this in order to decide which direction to take.</p>\n<p>Hence it is required to measure the input. This leads to the question of how is it actually possible to measure input properly?</p>\n<p>Measuring input in <a href=\"https://www.mountaingoatsoftware.com/blog/what-are-story-points\" target=\"_blank\" rel=\"external\">Story Points</a> or in men days are a widely known practice, but in the end these measurements are just an abstraction for what really matters for a company, which is the costs defined in money.</p>\n<h2 id=\"Why-not-Story-Points\"><a href=\"#Why-not-Story-Points\" class=\"headerlink\" title=\"Why not Story Points ?\"></a>Why not Story Points ?</h2><p>Story points are an abstraction of time that is needed to deliver something, as described by Mike Cohn <a href=\"https://www.mountaingoatsoftware.com/blog/story-points-are-still-about-effort\" target=\"_blank\" rel=\"external\">Story Points Are Still About Effort</a>. </p>\n<p>But in my opinion, the question about how long it takes to deliver something is in the end more a question about how high the investment is for the delivery. It is hard to transform story points into money.</p>\n<p><em>Examples:</em></p>\n<ul>\n<li>A team of 5 developers costs 25.000 € per sprint </li>\n<li>The team has a velocity of 60 story points</li>\n<li>The smallest possible unit that can be estimated is 1 story point. E.g. a task of 1 hour effort is estimated as 1.<br>1 story point costs  416 € (25.000 € / 60)</li>\n<li>But the normal cost per development hour is just 62,5 € (25.000 € / 5 Developer / 10 working days / 8 working hours )</li>\n</ul>\n<p>The example shows that Story points do not equal time and therefore they are not suitable to calculate investments.</p>\n<h2 id=\"Why-not-just-use-time\"><a href=\"#Why-not-just-use-time\" class=\"headerlink\" title=\"Why not just use time?\"></a>Why not just use time?</h2><p>Development time is just one of several factors that needs to be taken into account for cost calculations. Others are:</p>\n<ul>\n<li><a href=\"http://blackswanfarming.com/cost-of-delay/\" target=\"_blank\" rel=\"external\">Cost of delay</a></li>\n<li>Team Size, how many people are working in the team for a product</li>\n<li>Cost of operation</li>\n</ul>\n<p>Besides that, time is usually conversely proportional to money. Getting something faster usually means it becomes more expensive. In very rare cases the development can be done faster with larger teams, larger teams are more expensive.  In most cases teams try to speed up the process by lowering the quality, but this will lead to follow up costs due to technical debts.</p>\n<blockquote>\n<p>“Greg Young on the other hand, has talked on several occasions about how technical debt is not necessarily bad. Businesses take loans all the time. They are a powerful tool to make an investment now, and pay for it later. It’s a fundamental aspect of our economy.”<br><a href=\"http://verraes.net/2013/07/managed-technical-debt/\" target=\"_blank\" rel=\"external\">http://verraes.net/2013/07/managed-technical-debt/</a></p>\n</blockquote>\n<h2 id=\"How-to-calculate-costs\"><a href=\"#How-to-calculate-costs\" class=\"headerlink\" title=\"How to calculate costs\"></a>How to calculate costs</h2><p>Beside the cost of delay it is important to know the general team costs, which are cost of operation plus personnel costs. For the final calculation, hardware costs comes on top. For different reasons it is true, that salaries of team members should not be transparent.</p>\n<p>In my current team we use an average per team member which is calculated over the salaries of the whole department including leads. That means that the team costs are calculated by Number of Team Members * Average Department Salary.</p>\n<p>The costs are calculated on a monthly basis but are reported on product cost centers. This is beneficial because the outcome for a company comes from the products and not from the teams, so we want to know the investment we have to take for a dedicated product.</p>\n<p>We split the team costs based on a monthly effort ratio in percent per product. When a team has to handle more than one product like it is in my case, we track the time spend on a product with <a href=\"http://www.filamentpd.com/lego-time-tracking/\" target=\"_blank\" rel=\"external\">Lego Time Tracking</a>.<br><img src=\"/2016/09/14/benefits-of-transparent-costs/lego.jpg\" alt=\"Lego Time Tracking\" title=\"Lego Time Tracking\"></p>\n<h2 id=\"How-to-forecast-costs\"><a href=\"#How-to-forecast-costs\" class=\"headerlink\" title=\"How to forecast costs\"></a>How to forecast costs</h2><p>It is not possible to forecast costs. You can only estimate costs, but estimates have the problem, that they are always wrong.</p>\n<ul>\n<li><a href=\"http://noestimates.org/blog/\" target=\"_blank\" rel=\"external\">http://noestimates.org/blog/</a></li>\n</ul>\n<h2 id=\"How-to-estimate-costs\"><a href=\"#How-to-estimate-costs\" class=\"headerlink\" title=\"How to estimate costs\"></a>How to estimate costs</h2><p>As a Product Owner I design my roadmap around <a href=\"https://scrumburg.wordpress.com/2016/06/30/business-value-poker-and-more-po-tools-nr-3/\" target=\"_blank\" rel=\"external\">goals</a> that bring valuable outcome. We also estimate the costs for the goals, so that I can see the ratio between input and outcome.</p>\n<p>Before the question “How long does it take?” I prefer the question: “How much time do we want to give us to reach that goal?”<br><img src=\"/2016/09/14/benefits-of-transparent-costs/roadmap.png\" alt=\"Roadmap with costs assigned to goals\" title=\"Roadmap with costs assigned to goals\"></p>\n<h2 id=\"Conclusion\"><a href=\"#Conclusion\" class=\"headerlink\" title=\"Conclusion\"></a>Conclusion</h2><p>I think it is valuable for the process of product development to make costs transparent to everybody involved. With the knowledge of the cost everybody in a company can take important decisions or can better understand the motivation behind them.</p>\n<p>It also prevents a team from wasting development time, because it makes everybody aware of the investment. In my experience this also helps to increase the commitment of everybody to their product.</p>\n<p>With the above mentioned methods, product owners are able to define the relation between input and outcome and get a powerful tool to measure the return of investment for certain deliveries.</p>\n","excerpt":"<p>In my last project I experienced the advantages of making development costs transparent, and I would like to share that here.<br>","more":"<br>When a product is developed, the intention is to generate a specific result (outcome) with it. Development requires effort. Effort is the input to gain the outcome. It is essential knowing the actual investment for this in order to decide which direction to take.</p>\n<p>Hence it is required to measure the input. This leads to the question of how is it actually possible to measure input properly?</p>\n<p>Measuring input in <a href=\"https://www.mountaingoatsoftware.com/blog/what-are-story-points\">Story Points</a> or in men days are a widely known practice, but in the end these measurements are just an abstraction for what really matters for a company, which is the costs defined in money.</p>\n<h2 id=\"Why-not-Story-Points\"><a href=\"#Why-not-Story-Points\" class=\"headerlink\" title=\"Why not Story Points ?\"></a>Why not Story Points ?</h2><p>Story points are an abstraction of time that is needed to deliver something, as described by Mike Cohn <a href=\"https://www.mountaingoatsoftware.com/blog/story-points-are-still-about-effort\">Story Points Are Still About Effort</a>. </p>\n<p>But in my opinion, the question about how long it takes to deliver something is in the end more a question about how high the investment is for the delivery. It is hard to transform story points into money.</p>\n<p><em>Examples:</em></p>\n<ul>\n<li>A team of 5 developers costs 25.000 € per sprint </li>\n<li>The team has a velocity of 60 story points</li>\n<li>The smallest possible unit that can be estimated is 1 story point. E.g. a task of 1 hour effort is estimated as 1.<br>1 story point costs  416 € (25.000 € / 60)</li>\n<li>But the normal cost per development hour is just 62,5 € (25.000 € / 5 Developer / 10 working days / 8 working hours )</li>\n</ul>\n<p>The example shows that Story points do not equal time and therefore they are not suitable to calculate investments.</p>\n<h2 id=\"Why-not-just-use-time\"><a href=\"#Why-not-just-use-time\" class=\"headerlink\" title=\"Why not just use time?\"></a>Why not just use time?</h2><p>Development time is just one of several factors that needs to be taken into account for cost calculations. Others are:</p>\n<ul>\n<li><a href=\"http://blackswanfarming.com/cost-of-delay/\">Cost of delay</a></li>\n<li>Team Size, how many people are working in the team for a product</li>\n<li>Cost of operation</li>\n</ul>\n<p>Besides that, time is usually conversely proportional to money. Getting something faster usually means it becomes more expensive. In very rare cases the development can be done faster with larger teams, larger teams are more expensive.  In most cases teams try to speed up the process by lowering the quality, but this will lead to follow up costs due to technical debts.</p>\n<blockquote>\n<p>“Greg Young on the other hand, has talked on several occasions about how technical debt is not necessarily bad. Businesses take loans all the time. They are a powerful tool to make an investment now, and pay for it later. It’s a fundamental aspect of our economy.”<br><a href=\"http://verraes.net/2013/07/managed-technical-debt/\">http://verraes.net/2013/07/managed-technical-debt/</a></p>\n</blockquote>\n<h2 id=\"How-to-calculate-costs\"><a href=\"#How-to-calculate-costs\" class=\"headerlink\" title=\"How to calculate costs\"></a>How to calculate costs</h2><p>Beside the cost of delay it is important to know the general team costs, which are cost of operation plus personnel costs. For the final calculation, hardware costs comes on top. For different reasons it is true, that salaries of team members should not be transparent.</p>\n<p>In my current team we use an average per team member which is calculated over the salaries of the whole department including leads. That means that the team costs are calculated by Number of Team Members * Average Department Salary.</p>\n<p>The costs are calculated on a monthly basis but are reported on product cost centers. This is beneficial because the outcome for a company comes from the products and not from the teams, so we want to know the investment we have to take for a dedicated product.</p>\n<p>We split the team costs based on a monthly effort ratio in percent per product. When a team has to handle more than one product like it is in my case, we track the time spend on a product with <a href=\"http://www.filamentpd.com/lego-time-tracking/\">Lego Time Tracking</a>.<br><img src=\"/2016/09/14/benefits-of-transparent-costs/lego.jpg\" alt=\"Lego Time Tracking\" title=\"Lego Time Tracking\"></p>\n<h2 id=\"How-to-forecast-costs\"><a href=\"#How-to-forecast-costs\" class=\"headerlink\" title=\"How to forecast costs\"></a>How to forecast costs</h2><p>It is not possible to forecast costs. You can only estimate costs, but estimates have the problem, that they are always wrong.</p>\n<ul>\n<li><a href=\"http://noestimates.org/blog/\">http://noestimates.org/blog/</a></li>\n</ul>\n<h2 id=\"How-to-estimate-costs\"><a href=\"#How-to-estimate-costs\" class=\"headerlink\" title=\"How to estimate costs\"></a>How to estimate costs</h2><p>As a Product Owner I design my roadmap around <a href=\"https://scrumburg.wordpress.com/2016/06/30/business-value-poker-and-more-po-tools-nr-3/\">goals</a> that bring valuable outcome. We also estimate the costs for the goals, so that I can see the ratio between input and outcome.</p>\n<p>Before the question “How long does it take?” I prefer the question: “How much time do we want to give us to reach that goal?”<br><img src=\"/2016/09/14/benefits-of-transparent-costs/roadmap.png\" alt=\"Roadmap with costs assigned to goals\" title=\"Roadmap with costs assigned to goals\"></p>\n<h2 id=\"Conclusion\"><a href=\"#Conclusion\" class=\"headerlink\" title=\"Conclusion\"></a>Conclusion</h2><p>I think it is valuable for the process of product development to make costs transparent to everybody involved. With the knowledge of the cost everybody in a company can take important decisions or can better understand the motivation behind them.</p>\n<p>It also prevents a team from wasting development time, because it makes everybody aware of the investment. In my experience this also helps to increase the commitment of everybody to their product.</p>\n<p>With the above mentioned methods, product owners are able to define the relation between input and outcome and get a powerful tool to measure the return of investment for certain deliveries.</p>"},{"title":"What's this blog about","_content":"Welcome. This blog is about my personal experiences from my work as a Product Owner. If you want to know more about me, please visit the [About](/about) page. This is what you can expect: \n<!-- more -->\n\n## Blog content\nI will write about different topics related to things i have learned during my work. Due to the fact that i am currently working as a Product Owner in a Scrum Team it will be mainly related to the following topics:\n* Agile Product Management\n* Lean Start Up\n* Scrum\n* Domain Driven Design\n \nBeside that i am also interested in the whole value chain of modern technology companies. So it will be most likely that i will also write about my observations in that area.\n\nAnd last but not least i never lost interest in coding it self. So i will also introduce some of my development projects here in this blog.\n\nI am very happy to get your feedback on my topics either by comment or any kind of private message. \n\nSo i hope that you will somehow benefit from my shared experiences. \n\nCheers\nGregor\n","source":"_posts/About.md","raw":"---\ntitle: What's this blog about\n---\nWelcome. This blog is about my personal experiences from my work as a Product Owner. If you want to know more about me, please visit the [About](/about) page. This is what you can expect: \n<!-- more -->\n\n## Blog content\nI will write about different topics related to things i have learned during my work. Due to the fact that i am currently working as a Product Owner in a Scrum Team it will be mainly related to the following topics:\n* Agile Product Management\n* Lean Start Up\n* Scrum\n* Domain Driven Design\n \nBeside that i am also interested in the whole value chain of modern technology companies. So it will be most likely that i will also write about my observations in that area.\n\nAnd last but not least i never lost interest in coding it self. So i will also introduce some of my development projects here in this blog.\n\nI am very happy to get your feedback on my topics either by comment or any kind of private message. \n\nSo i hope that you will somehow benefit from my shared experiences. \n\nCheers\nGregor\n","slug":"About","published":1,"date":"2016-09-09T14:59:38.000Z","updated":"2016-09-09T14:59:38.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"citbk7qdp0009hgouhg3kwwqd","content":"<p>Welcome. This blog is about my personal experiences from my work as a Product Owner. If you want to know more about me, please visit the <a href=\"/about\">About</a> page. This is what you can expect:<br><a id=\"more\"></a></p>\n<h2 id=\"Blog-content\"><a href=\"#Blog-content\" class=\"headerlink\" title=\"Blog content\"></a>Blog content</h2><p>I will write about different topics related to things i have learned during my work. Due to the fact that i am currently working as a Product Owner in a Scrum Team it will be mainly related to the following topics:</p>\n<ul>\n<li>Agile Product Management</li>\n<li>Lean Start Up</li>\n<li>Scrum</li>\n<li>Domain Driven Design</li>\n</ul>\n<p>Beside that i am also interested in the whole value chain of modern technology companies. So it will be most likely that i will also write about my observations in that area.</p>\n<p>And last but not least i never lost interest in coding it self. So i will also introduce some of my development projects here in this blog.</p>\n<p>I am very happy to get your feedback on my topics either by comment or any kind of private message. </p>\n<p>So i hope that you will somehow benefit from my shared experiences. </p>\n<p>Cheers<br>Gregor</p>\n","excerpt":"<p>Welcome. This blog is about my personal experiences from my work as a Product Owner. If you want to know more about me, please visit the <a href=\"/about\">About</a> page. This is what you can expect:<br>","more":"</p>\n<h2 id=\"Blog-content\"><a href=\"#Blog-content\" class=\"headerlink\" title=\"Blog content\"></a>Blog content</h2><p>I will write about different topics related to things i have learned during my work. Due to the fact that i am currently working as a Product Owner in a Scrum Team it will be mainly related to the following topics:</p>\n<ul>\n<li>Agile Product Management</li>\n<li>Lean Start Up</li>\n<li>Scrum</li>\n<li>Domain Driven Design</li>\n</ul>\n<p>Beside that i am also interested in the whole value chain of modern technology companies. So it will be most likely that i will also write about my observations in that area.</p>\n<p>And last but not least i never lost interest in coding it self. So i will also introduce some of my development projects here in this blog.</p>\n<p>I am very happy to get your feedback on my topics either by comment or any kind of private message. </p>\n<p>So i hope that you will somehow benefit from my shared experiences. </p>\n<p>Cheers<br>Gregor</p>"},{"title":"Stakeholder collaboration","date":"2016-09-19T09:06:06.000Z","_content":"\nThe Product Owner is often meant to be the translator between the business language and the technical language of the developers. I think this is fundamentally wrong. Instead of looking for a translator teams should establish a [ubiquitous language](http://martinfowler.com/bliki/UbiquitousLanguage.html) that both sides can understand to enable direct communication.\n<!-- more -->\n\nIn my career so far, i was responsible for a couple of different products. I would like to share my experience in terms of the collaboration with the stakeholders for two of these projects. Both were very different.\n\n## The Marketing Backend\nThe Marketing Backend is a reporting tool for performance marketing KPI’s aggregated on monthly cohorts. The tool is used by marketing key account managers to steer marketing investments aligned by the life time value per customer.  \n\n*Stakeholder:*\nAround 30 key account manager are using the tool on a daily basis. The requirements came from one key user per marketing team (SEA, Facebook, Display, RTA, TV).\n\n*Development Team:*\n- 7 Developers\n- 1 QA \n- 1 Product Owner (me) \n- 1 Agile Coach  \n\n## The Customer Relationship Management (CRM) System \nThe task here is to provide customer data to a third party system that is required to communicate with the customers for marketing purposes. In  the first step the team focuses on email marketing.\n\n*Stakeholder:*\nRequirements are worked out together with two email marketing managers. Besides that developers, who are using the data interface, are considered as stakeholder as well.\n\n*Development Team:*\n- 3 Developers\n- 1 Product Owner (me) \n- 1 Agile Coach\n\n## Aspects of Collaboration\n\n### Collocation\n\n#### Marketing Backend\nThe development team was separated from the stakeholders. For some period of time the separation was even over different buildings. A casual exchange between them was only possible in official meetings. The stakeholders were always considered as disruptive and direct communication with them was avoided. \n\n#### CRM\nDevelopers and stakeholders are sitting together at the same table. They consider themselves as one team. Issues related to their work are usually clarified directly. Both sides see what is their daily business and that fosters a mutual understanding and the willing to work collaborative together.\n\n#### Lessons learned\nDirect communication between developers and stakeholders is essential for a successful product development.  The example shows that a spatial separation of development team and stakeholders is a huge weakening of the communication flow.\n\n### Integration of stakeholders into the scrum process\n\n#### Marketing Backend\nThe requirements were communicated to the team with [Jira](https://www.atlassian.com/software/jira) tickets. Stakeholder and Product Owner met two times a week to refine these tickets. Besides that there was a bi-weekly prioritization meeting also just between stakeholders and Product Owner. Information about requirements and prioritization was communicated to the development team by the Product Owner. There was no review meeting. Instead tickets were assigned back to the stakeholders for approval after implementation. Due to that developers got very delayed feedback about their work and the backlog was rapidly growing to a size that was not manageable anymore.\n\n#### CRM\nDevelopers and stakeholders are doing their daily stand up together. Here they share details about the work and potential problems. Stakeholders also participate to the sprint planning and developers ask them directly for advice. Priority and product strategy are discussed on a higher level with a goal oriented roadmap. The roadmap is also maintained by all involved people together on a regular basis. There is a review meeting after every sprint were the development team collects feedback about their current iteration from a extended circle of stakeholders. \n\n#### Lessons learned\nIt is mandatory for the developers to get early feedback about their current work from the stakeholders. The Product Owner should never be a buffer between the team and the stakeholders. Rather he must take care that both sides are connected and that they clarify issues on their own.\n\n### Domain Knowledge sharing \n\n#### Marketing Backend\nThe domain “performance marketing” was a complete new topic for the development team.  They had a lot of trouble to get into that. In some cases the developers even refused to learn something about their domain. They expected that the Product Owner will tell them what needs to be done. This lead to the fact that a lot of iterations were needed to come to a suitable solution for many requirements.\n\n#### CRM\nAlso in this case the domain was completely new for the team. But this time the team did not refused to learn. The developers had an interest in the work of the stakeholders. They are often sitting together and let the stakeholders explain their work. As a kick off we did a [Story Mapping](http://jpattonassociates.com/storymappingslides/) workshop. Here we worked out together the complete email marketing workflow. In that way basic question could be asked before we started the work.\n\n{% asset_img story_mapping.png Story Mapping Workshop %}\n\n#### Lessons learned\nTo solve the problems of the business it is required to understand the business needs. It is mandatory to inspire curiosity for the business side from the beginning on, so that developers are willing to learn what they needed to know for building their product. It is the task of a product owner to foster that process and again to connect both sides.\n\n### Shared Commitment\n\n#### Marketing Backend\nThe “big picture” and the value of the product for the company was not transparent for the development team. As a result of that the team withdraw to an area where they felt comfortable, which was software architecture and design patterns. In the end this lead to overengineering. Stakeholder on the other side did not had  any appreciation for that, they were just wondering why implementation time was getting longer and longer. The amount of requested features was not adapted to the delivery time of the team and the backlog was growing and growing. Developers and stakeholders were not working on the same goal.\n\n#### CRM\nThere is a clear communicated vision for the team. Plannings on roadmap level or for the next sprint are always done in collaboration with the stakeholders. Necessary adjustments of the current sprint are always done in agreement with the whole team. The team always takes care that everybody is able to speak up when there are any doubts. Stakeholder and developers work together goal oriented.\n\n#### Lessons learned\nEvery role in a product development team has its own intention to build a great product. Which means that the intentions might be different but the goal is the same. A successful product needs all aspects, therefore it is crucial to set a common goal and let everybody work in the same direction\n\n{% asset_img intention.png Every role in a team has different intentions %}\n\n## Conclusion\nI am blaming the Marketing Backend here a bit too much. I also need to mention that during my work on that product i was together with great people and the product is still a major part of the success of the performance marketing team. Besides that, everything written here is only from my perspective.  \n\nThe above mentioned examples have all in common, that it went wrong when the direct communication between the development team and the stakeholders was not possible. It is important that both sides can learn from each other. It shows that transparency and trust is necessary for a successful product development.\n\n{% asset_img collabo.png Event Stroming Workshop %}\nDeveloper and stakeholder are working together on a Domain Model\n","source":"_posts/stakeholder-collaboration.md","raw":"---\ntitle: Stakeholder collaboration\ntags:\n  - DDD\n  - agile\n  - scrum\ndate: 2016-09-19 11:06:06\n---\n\nThe Product Owner is often meant to be the translator between the business language and the technical language of the developers. I think this is fundamentally wrong. Instead of looking for a translator teams should establish a [ubiquitous language](http://martinfowler.com/bliki/UbiquitousLanguage.html) that both sides can understand to enable direct communication.\n<!-- more -->\n\nIn my career so far, i was responsible for a couple of different products. I would like to share my experience in terms of the collaboration with the stakeholders for two of these projects. Both were very different.\n\n## The Marketing Backend\nThe Marketing Backend is a reporting tool for performance marketing KPI’s aggregated on monthly cohorts. The tool is used by marketing key account managers to steer marketing investments aligned by the life time value per customer.  \n\n*Stakeholder:*\nAround 30 key account manager are using the tool on a daily basis. The requirements came from one key user per marketing team (SEA, Facebook, Display, RTA, TV).\n\n*Development Team:*\n- 7 Developers\n- 1 QA \n- 1 Product Owner (me) \n- 1 Agile Coach  \n\n## The Customer Relationship Management (CRM) System \nThe task here is to provide customer data to a third party system that is required to communicate with the customers for marketing purposes. In  the first step the team focuses on email marketing.\n\n*Stakeholder:*\nRequirements are worked out together with two email marketing managers. Besides that developers, who are using the data interface, are considered as stakeholder as well.\n\n*Development Team:*\n- 3 Developers\n- 1 Product Owner (me) \n- 1 Agile Coach\n\n## Aspects of Collaboration\n\n### Collocation\n\n#### Marketing Backend\nThe development team was separated from the stakeholders. For some period of time the separation was even over different buildings. A casual exchange between them was only possible in official meetings. The stakeholders were always considered as disruptive and direct communication with them was avoided. \n\n#### CRM\nDevelopers and stakeholders are sitting together at the same table. They consider themselves as one team. Issues related to their work are usually clarified directly. Both sides see what is their daily business and that fosters a mutual understanding and the willing to work collaborative together.\n\n#### Lessons learned\nDirect communication between developers and stakeholders is essential for a successful product development.  The example shows that a spatial separation of development team and stakeholders is a huge weakening of the communication flow.\n\n### Integration of stakeholders into the scrum process\n\n#### Marketing Backend\nThe requirements were communicated to the team with [Jira](https://www.atlassian.com/software/jira) tickets. Stakeholder and Product Owner met two times a week to refine these tickets. Besides that there was a bi-weekly prioritization meeting also just between stakeholders and Product Owner. Information about requirements and prioritization was communicated to the development team by the Product Owner. There was no review meeting. Instead tickets were assigned back to the stakeholders for approval after implementation. Due to that developers got very delayed feedback about their work and the backlog was rapidly growing to a size that was not manageable anymore.\n\n#### CRM\nDevelopers and stakeholders are doing their daily stand up together. Here they share details about the work and potential problems. Stakeholders also participate to the sprint planning and developers ask them directly for advice. Priority and product strategy are discussed on a higher level with a goal oriented roadmap. The roadmap is also maintained by all involved people together on a regular basis. There is a review meeting after every sprint were the development team collects feedback about their current iteration from a extended circle of stakeholders. \n\n#### Lessons learned\nIt is mandatory for the developers to get early feedback about their current work from the stakeholders. The Product Owner should never be a buffer between the team and the stakeholders. Rather he must take care that both sides are connected and that they clarify issues on their own.\n\n### Domain Knowledge sharing \n\n#### Marketing Backend\nThe domain “performance marketing” was a complete new topic for the development team.  They had a lot of trouble to get into that. In some cases the developers even refused to learn something about their domain. They expected that the Product Owner will tell them what needs to be done. This lead to the fact that a lot of iterations were needed to come to a suitable solution for many requirements.\n\n#### CRM\nAlso in this case the domain was completely new for the team. But this time the team did not refused to learn. The developers had an interest in the work of the stakeholders. They are often sitting together and let the stakeholders explain their work. As a kick off we did a [Story Mapping](http://jpattonassociates.com/storymappingslides/) workshop. Here we worked out together the complete email marketing workflow. In that way basic question could be asked before we started the work.\n\n{% asset_img story_mapping.png Story Mapping Workshop %}\n\n#### Lessons learned\nTo solve the problems of the business it is required to understand the business needs. It is mandatory to inspire curiosity for the business side from the beginning on, so that developers are willing to learn what they needed to know for building their product. It is the task of a product owner to foster that process and again to connect both sides.\n\n### Shared Commitment\n\n#### Marketing Backend\nThe “big picture” and the value of the product for the company was not transparent for the development team. As a result of that the team withdraw to an area where they felt comfortable, which was software architecture and design patterns. In the end this lead to overengineering. Stakeholder on the other side did not had  any appreciation for that, they were just wondering why implementation time was getting longer and longer. The amount of requested features was not adapted to the delivery time of the team and the backlog was growing and growing. Developers and stakeholders were not working on the same goal.\n\n#### CRM\nThere is a clear communicated vision for the team. Plannings on roadmap level or for the next sprint are always done in collaboration with the stakeholders. Necessary adjustments of the current sprint are always done in agreement with the whole team. The team always takes care that everybody is able to speak up when there are any doubts. Stakeholder and developers work together goal oriented.\n\n#### Lessons learned\nEvery role in a product development team has its own intention to build a great product. Which means that the intentions might be different but the goal is the same. A successful product needs all aspects, therefore it is crucial to set a common goal and let everybody work in the same direction\n\n{% asset_img intention.png Every role in a team has different intentions %}\n\n## Conclusion\nI am blaming the Marketing Backend here a bit too much. I also need to mention that during my work on that product i was together with great people and the product is still a major part of the success of the performance marketing team. Besides that, everything written here is only from my perspective.  \n\nThe above mentioned examples have all in common, that it went wrong when the direct communication between the development team and the stakeholders was not possible. It is important that both sides can learn from each other. It shows that transparency and trust is necessary for a successful product development.\n\n{% asset_img collabo.png Event Stroming Workshop %}\nDeveloper and stakeholder are working together on a Domain Model\n","slug":"stakeholder-collaboration","published":1,"updated":"2016-09-19T09:06:06.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"citbk7qdr000bhgou1wi5yf3o","content":"<p>The Product Owner is often meant to be the translator between the business language and the technical language of the developers. I think this is fundamentally wrong. Instead of looking for a translator teams should establish a <a href=\"http://martinfowler.com/bliki/UbiquitousLanguage.html\" target=\"_blank\" rel=\"external\">ubiquitous language</a> that both sides can understand to enable direct communication.<br><a id=\"more\"></a></p>\n<p>In my career so far, i was responsible for a couple of different products. I would like to share my experience in terms of the collaboration with the stakeholders for two of these projects. Both were very different.</p>\n<h2 id=\"The-Marketing-Backend\"><a href=\"#The-Marketing-Backend\" class=\"headerlink\" title=\"The Marketing Backend\"></a>The Marketing Backend</h2><p>The Marketing Backend is a reporting tool for performance marketing KPI’s aggregated on monthly cohorts. The tool is used by marketing key account managers to steer marketing investments aligned by the life time value per customer.  </p>\n<p><em>Stakeholder:</em><br>Around 30 key account manager are using the tool on a daily basis. The requirements came from one key user per marketing team (SEA, Facebook, Display, RTA, TV).</p>\n<p><em>Development Team:</em></p>\n<ul>\n<li>7 Developers</li>\n<li>1 QA </li>\n<li>1 Product Owner (me) </li>\n<li>1 Agile Coach  </li>\n</ul>\n<h2 id=\"The-Customer-Relationship-Management-CRM-System\"><a href=\"#The-Customer-Relationship-Management-CRM-System\" class=\"headerlink\" title=\"The Customer Relationship Management (CRM) System\"></a>The Customer Relationship Management (CRM) System</h2><p>The task here is to provide customer data to a third party system that is required to communicate with the customers for marketing purposes. In  the first step the team focuses on email marketing.</p>\n<p><em>Stakeholder:</em><br>Requirements are worked out together with two email marketing managers. Besides that developers, who are using the data interface, are considered as stakeholder as well.</p>\n<p><em>Development Team:</em></p>\n<ul>\n<li>3 Developers</li>\n<li>1 Product Owner (me) </li>\n<li>1 Agile Coach</li>\n</ul>\n<h2 id=\"Aspects-of-Collaboration\"><a href=\"#Aspects-of-Collaboration\" class=\"headerlink\" title=\"Aspects of Collaboration\"></a>Aspects of Collaboration</h2><h3 id=\"Collocation\"><a href=\"#Collocation\" class=\"headerlink\" title=\"Collocation\"></a>Collocation</h3><h4 id=\"Marketing-Backend\"><a href=\"#Marketing-Backend\" class=\"headerlink\" title=\"Marketing Backend\"></a>Marketing Backend</h4><p>The development team was separated from the stakeholders. For some period of time the separation was even over different buildings. A casual exchange between them was only possible in official meetings. The stakeholders were always considered as disruptive and direct communication with them was avoided. </p>\n<h4 id=\"CRM\"><a href=\"#CRM\" class=\"headerlink\" title=\"CRM\"></a>CRM</h4><p>Developers and stakeholders are sitting together at the same table. They consider themselves as one team. Issues related to their work are usually clarified directly. Both sides see what is their daily business and that fosters a mutual understanding and the willing to work collaborative together.</p>\n<h4 id=\"Lessons-learned\"><a href=\"#Lessons-learned\" class=\"headerlink\" title=\"Lessons learned\"></a>Lessons learned</h4><p>Direct communication between developers and stakeholders is essential for a successful product development.  The example shows that a spatial separation of development team and stakeholders is a huge weakening of the communication flow.</p>\n<h3 id=\"Integration-of-stakeholders-into-the-scrum-process\"><a href=\"#Integration-of-stakeholders-into-the-scrum-process\" class=\"headerlink\" title=\"Integration of stakeholders into the scrum process\"></a>Integration of stakeholders into the scrum process</h3><h4 id=\"Marketing-Backend-1\"><a href=\"#Marketing-Backend-1\" class=\"headerlink\" title=\"Marketing Backend\"></a>Marketing Backend</h4><p>The requirements were communicated to the team with <a href=\"https://www.atlassian.com/software/jira\" target=\"_blank\" rel=\"external\">Jira</a> tickets. Stakeholder and Product Owner met two times a week to refine these tickets. Besides that there was a bi-weekly prioritization meeting also just between stakeholders and Product Owner. Information about requirements and prioritization was communicated to the development team by the Product Owner. There was no review meeting. Instead tickets were assigned back to the stakeholders for approval after implementation. Due to that developers got very delayed feedback about their work and the backlog was rapidly growing to a size that was not manageable anymore.</p>\n<h4 id=\"CRM-1\"><a href=\"#CRM-1\" class=\"headerlink\" title=\"CRM\"></a>CRM</h4><p>Developers and stakeholders are doing their daily stand up together. Here they share details about the work and potential problems. Stakeholders also participate to the sprint planning and developers ask them directly for advice. Priority and product strategy are discussed on a higher level with a goal oriented roadmap. The roadmap is also maintained by all involved people together on a regular basis. There is a review meeting after every sprint were the development team collects feedback about their current iteration from a extended circle of stakeholders. </p>\n<h4 id=\"Lessons-learned-1\"><a href=\"#Lessons-learned-1\" class=\"headerlink\" title=\"Lessons learned\"></a>Lessons learned</h4><p>It is mandatory for the developers to get early feedback about their current work from the stakeholders. The Product Owner should never be a buffer between the team and the stakeholders. Rather he must take care that both sides are connected and that they clarify issues on their own.</p>\n<h3 id=\"Domain-Knowledge-sharing\"><a href=\"#Domain-Knowledge-sharing\" class=\"headerlink\" title=\"Domain Knowledge sharing\"></a>Domain Knowledge sharing</h3><h4 id=\"Marketing-Backend-2\"><a href=\"#Marketing-Backend-2\" class=\"headerlink\" title=\"Marketing Backend\"></a>Marketing Backend</h4><p>The domain “performance marketing” was a complete new topic for the development team.  They had a lot of trouble to get into that. In some cases the developers even refused to learn something about their domain. They expected that the Product Owner will tell them what needs to be done. This lead to the fact that a lot of iterations were needed to come to a suitable solution for many requirements.</p>\n<h4 id=\"CRM-2\"><a href=\"#CRM-2\" class=\"headerlink\" title=\"CRM\"></a>CRM</h4><p>Also in this case the domain was completely new for the team. But this time the team did not refused to learn. The developers had an interest in the work of the stakeholders. They are often sitting together and let the stakeholders explain their work. As a kick off we did a <a href=\"http://jpattonassociates.com/storymappingslides/\" target=\"_blank\" rel=\"external\">Story Mapping</a> workshop. Here we worked out together the complete email marketing workflow. In that way basic question could be asked before we started the work.</p>\n<img src=\"/2016/09/19/stakeholder-collaboration/story_mapping.png\" alt=\"Story Mapping Workshop\" title=\"Story Mapping Workshop\">\n<h4 id=\"Lessons-learned-2\"><a href=\"#Lessons-learned-2\" class=\"headerlink\" title=\"Lessons learned\"></a>Lessons learned</h4><p>To solve the problems of the business it is required to understand the business needs. It is mandatory to inspire curiosity for the business side from the beginning on, so that developers are willing to learn what they needed to know for building their product. It is the task of a product owner to foster that process and again to connect both sides.</p>\n<h3 id=\"Shared-Commitment\"><a href=\"#Shared-Commitment\" class=\"headerlink\" title=\"Shared Commitment\"></a>Shared Commitment</h3><h4 id=\"Marketing-Backend-3\"><a href=\"#Marketing-Backend-3\" class=\"headerlink\" title=\"Marketing Backend\"></a>Marketing Backend</h4><p>The “big picture” and the value of the product for the company was not transparent for the development team. As a result of that the team withdraw to an area where they felt comfortable, which was software architecture and design patterns. In the end this lead to overengineering. Stakeholder on the other side did not had  any appreciation for that, they were just wondering why implementation time was getting longer and longer. The amount of requested features was not adapted to the delivery time of the team and the backlog was growing and growing. Developers and stakeholders were not working on the same goal.</p>\n<h4 id=\"CRM-3\"><a href=\"#CRM-3\" class=\"headerlink\" title=\"CRM\"></a>CRM</h4><p>There is a clear communicated vision for the team. Plannings on roadmap level or for the next sprint are always done in collaboration with the stakeholders. Necessary adjustments of the current sprint are always done in agreement with the whole team. The team always takes care that everybody is able to speak up when there are any doubts. Stakeholder and developers work together goal oriented.</p>\n<h4 id=\"Lessons-learned-3\"><a href=\"#Lessons-learned-3\" class=\"headerlink\" title=\"Lessons learned\"></a>Lessons learned</h4><p>Every role in a product development team has its own intention to build a great product. Which means that the intentions might be different but the goal is the same. A successful product needs all aspects, therefore it is crucial to set a common goal and let everybody work in the same direction</p>\n<img src=\"/2016/09/19/stakeholder-collaboration/intention.png\" alt=\"Every role in a team has different intentions\" title=\"Every role in a team has different intentions\">\n<h2 id=\"Conclusion\"><a href=\"#Conclusion\" class=\"headerlink\" title=\"Conclusion\"></a>Conclusion</h2><p>I am blaming the Marketing Backend here a bit too much. I also need to mention that during my work on that product i was together with great people and the product is still a major part of the success of the performance marketing team. Besides that, everything written here is only from my perspective.  </p>\n<p>The above mentioned examples have all in common, that it went wrong when the direct communication between the development team and the stakeholders was not possible. It is important that both sides can learn from each other. It shows that transparency and trust is necessary for a successful product development.</p>\n<img src=\"/2016/09/19/stakeholder-collaboration/collabo.png\" alt=\"Event Stroming Workshop\" title=\"Event Stroming Workshop\">\n<p>Developer and stakeholder are working together on a Domain Model</p>\n","excerpt":"<p>The Product Owner is often meant to be the translator between the business language and the technical language of the developers. I think this is fundamentally wrong. Instead of looking for a translator teams should establish a <a href=\"http://martinfowler.com/bliki/UbiquitousLanguage.html\">ubiquitous language</a> that both sides can understand to enable direct communication.<br>","more":"</p>\n<p>In my career so far, i was responsible for a couple of different products. I would like to share my experience in terms of the collaboration with the stakeholders for two of these projects. Both were very different.</p>\n<h2 id=\"The-Marketing-Backend\"><a href=\"#The-Marketing-Backend\" class=\"headerlink\" title=\"The Marketing Backend\"></a>The Marketing Backend</h2><p>The Marketing Backend is a reporting tool for performance marketing KPI’s aggregated on monthly cohorts. The tool is used by marketing key account managers to steer marketing investments aligned by the life time value per customer.  </p>\n<p><em>Stakeholder:</em><br>Around 30 key account manager are using the tool on a daily basis. The requirements came from one key user per marketing team (SEA, Facebook, Display, RTA, TV).</p>\n<p><em>Development Team:</em></p>\n<ul>\n<li>7 Developers</li>\n<li>1 QA </li>\n<li>1 Product Owner (me) </li>\n<li>1 Agile Coach  </li>\n</ul>\n<h2 id=\"The-Customer-Relationship-Management-CRM-System\"><a href=\"#The-Customer-Relationship-Management-CRM-System\" class=\"headerlink\" title=\"The Customer Relationship Management (CRM) System\"></a>The Customer Relationship Management (CRM) System</h2><p>The task here is to provide customer data to a third party system that is required to communicate with the customers for marketing purposes. In  the first step the team focuses on email marketing.</p>\n<p><em>Stakeholder:</em><br>Requirements are worked out together with two email marketing managers. Besides that developers, who are using the data interface, are considered as stakeholder as well.</p>\n<p><em>Development Team:</em></p>\n<ul>\n<li>3 Developers</li>\n<li>1 Product Owner (me) </li>\n<li>1 Agile Coach</li>\n</ul>\n<h2 id=\"Aspects-of-Collaboration\"><a href=\"#Aspects-of-Collaboration\" class=\"headerlink\" title=\"Aspects of Collaboration\"></a>Aspects of Collaboration</h2><h3 id=\"Collocation\"><a href=\"#Collocation\" class=\"headerlink\" title=\"Collocation\"></a>Collocation</h3><h4 id=\"Marketing-Backend\"><a href=\"#Marketing-Backend\" class=\"headerlink\" title=\"Marketing Backend\"></a>Marketing Backend</h4><p>The development team was separated from the stakeholders. For some period of time the separation was even over different buildings. A casual exchange between them was only possible in official meetings. The stakeholders were always considered as disruptive and direct communication with them was avoided. </p>\n<h4 id=\"CRM\"><a href=\"#CRM\" class=\"headerlink\" title=\"CRM\"></a>CRM</h4><p>Developers and stakeholders are sitting together at the same table. They consider themselves as one team. Issues related to their work are usually clarified directly. Both sides see what is their daily business and that fosters a mutual understanding and the willing to work collaborative together.</p>\n<h4 id=\"Lessons-learned\"><a href=\"#Lessons-learned\" class=\"headerlink\" title=\"Lessons learned\"></a>Lessons learned</h4><p>Direct communication between developers and stakeholders is essential for a successful product development.  The example shows that a spatial separation of development team and stakeholders is a huge weakening of the communication flow.</p>\n<h3 id=\"Integration-of-stakeholders-into-the-scrum-process\"><a href=\"#Integration-of-stakeholders-into-the-scrum-process\" class=\"headerlink\" title=\"Integration of stakeholders into the scrum process\"></a>Integration of stakeholders into the scrum process</h3><h4 id=\"Marketing-Backend-1\"><a href=\"#Marketing-Backend-1\" class=\"headerlink\" title=\"Marketing Backend\"></a>Marketing Backend</h4><p>The requirements were communicated to the team with <a href=\"https://www.atlassian.com/software/jira\">Jira</a> tickets. Stakeholder and Product Owner met two times a week to refine these tickets. Besides that there was a bi-weekly prioritization meeting also just between stakeholders and Product Owner. Information about requirements and prioritization was communicated to the development team by the Product Owner. There was no review meeting. Instead tickets were assigned back to the stakeholders for approval after implementation. Due to that developers got very delayed feedback about their work and the backlog was rapidly growing to a size that was not manageable anymore.</p>\n<h4 id=\"CRM-1\"><a href=\"#CRM-1\" class=\"headerlink\" title=\"CRM\"></a>CRM</h4><p>Developers and stakeholders are doing their daily stand up together. Here they share details about the work and potential problems. Stakeholders also participate to the sprint planning and developers ask them directly for advice. Priority and product strategy are discussed on a higher level with a goal oriented roadmap. The roadmap is also maintained by all involved people together on a regular basis. There is a review meeting after every sprint were the development team collects feedback about their current iteration from a extended circle of stakeholders. </p>\n<h4 id=\"Lessons-learned-1\"><a href=\"#Lessons-learned-1\" class=\"headerlink\" title=\"Lessons learned\"></a>Lessons learned</h4><p>It is mandatory for the developers to get early feedback about their current work from the stakeholders. The Product Owner should never be a buffer between the team and the stakeholders. Rather he must take care that both sides are connected and that they clarify issues on their own.</p>\n<h3 id=\"Domain-Knowledge-sharing\"><a href=\"#Domain-Knowledge-sharing\" class=\"headerlink\" title=\"Domain Knowledge sharing\"></a>Domain Knowledge sharing</h3><h4 id=\"Marketing-Backend-2\"><a href=\"#Marketing-Backend-2\" class=\"headerlink\" title=\"Marketing Backend\"></a>Marketing Backend</h4><p>The domain “performance marketing” was a complete new topic for the development team.  They had a lot of trouble to get into that. In some cases the developers even refused to learn something about their domain. They expected that the Product Owner will tell them what needs to be done. This lead to the fact that a lot of iterations were needed to come to a suitable solution for many requirements.</p>\n<h4 id=\"CRM-2\"><a href=\"#CRM-2\" class=\"headerlink\" title=\"CRM\"></a>CRM</h4><p>Also in this case the domain was completely new for the team. But this time the team did not refused to learn. The developers had an interest in the work of the stakeholders. They are often sitting together and let the stakeholders explain their work. As a kick off we did a <a href=\"http://jpattonassociates.com/storymappingslides/\">Story Mapping</a> workshop. Here we worked out together the complete email marketing workflow. In that way basic question could be asked before we started the work.</p>\n<img src=\"/2016/09/19/stakeholder-collaboration/story_mapping.png\" alt=\"Story Mapping Workshop\" title=\"Story Mapping Workshop\">\n<h4 id=\"Lessons-learned-2\"><a href=\"#Lessons-learned-2\" class=\"headerlink\" title=\"Lessons learned\"></a>Lessons learned</h4><p>To solve the problems of the business it is required to understand the business needs. It is mandatory to inspire curiosity for the business side from the beginning on, so that developers are willing to learn what they needed to know for building their product. It is the task of a product owner to foster that process and again to connect both sides.</p>\n<h3 id=\"Shared-Commitment\"><a href=\"#Shared-Commitment\" class=\"headerlink\" title=\"Shared Commitment\"></a>Shared Commitment</h3><h4 id=\"Marketing-Backend-3\"><a href=\"#Marketing-Backend-3\" class=\"headerlink\" title=\"Marketing Backend\"></a>Marketing Backend</h4><p>The “big picture” and the value of the product for the company was not transparent for the development team. As a result of that the team withdraw to an area where they felt comfortable, which was software architecture and design patterns. In the end this lead to overengineering. Stakeholder on the other side did not had  any appreciation for that, they were just wondering why implementation time was getting longer and longer. The amount of requested features was not adapted to the delivery time of the team and the backlog was growing and growing. Developers and stakeholders were not working on the same goal.</p>\n<h4 id=\"CRM-3\"><a href=\"#CRM-3\" class=\"headerlink\" title=\"CRM\"></a>CRM</h4><p>There is a clear communicated vision for the team. Plannings on roadmap level or for the next sprint are always done in collaboration with the stakeholders. Necessary adjustments of the current sprint are always done in agreement with the whole team. The team always takes care that everybody is able to speak up when there are any doubts. Stakeholder and developers work together goal oriented.</p>\n<h4 id=\"Lessons-learned-3\"><a href=\"#Lessons-learned-3\" class=\"headerlink\" title=\"Lessons learned\"></a>Lessons learned</h4><p>Every role in a product development team has its own intention to build a great product. Which means that the intentions might be different but the goal is the same. A successful product needs all aspects, therefore it is crucial to set a common goal and let everybody work in the same direction</p>\n<img src=\"/2016/09/19/stakeholder-collaboration/intention.png\" alt=\"Every role in a team has different intentions\" title=\"Every role in a team has different intentions\">\n<h2 id=\"Conclusion\"><a href=\"#Conclusion\" class=\"headerlink\" title=\"Conclusion\"></a>Conclusion</h2><p>I am blaming the Marketing Backend here a bit too much. I also need to mention that during my work on that product i was together with great people and the product is still a major part of the success of the performance marketing team. Besides that, everything written here is only from my perspective.  </p>\n<p>The above mentioned examples have all in common, that it went wrong when the direct communication between the development team and the stakeholders was not possible. It is important that both sides can learn from each other. It shows that transparency and trust is necessary for a successful product development.</p>\n<img src=\"/2016/09/19/stakeholder-collaboration/collabo.png\" alt=\"Event Stroming Workshop\" title=\"Event Stroming Workshop\">\n<p>Developer and stakeholder are working together on a Domain Model</p>"}],"PostAsset":[{"_id":"source/_posts/benefits-of-transparent-costs/lego.jpg","slug":"lego.jpg","post":"citbk7qdl0007hgoupe76vv2r","modified":0,"renderable":0},{"_id":"source/_posts/benefits-of-transparent-costs/roadmap.png","slug":"roadmap.png","post":"citbk7qdl0007hgoupe76vv2r","modified":0,"renderable":0},{"_id":"source/_posts/stakeholder-collaboration/collabo.png","slug":"collabo.png","post":"citbk7qdr000bhgou1wi5yf3o","modified":0,"renderable":0},{"_id":"source/_posts/stakeholder-collaboration/intention.png","slug":"intention.png","post":"citbk7qdr000bhgou1wi5yf3o","modified":0,"renderable":0},{"_id":"source/_posts/stakeholder-collaboration/story_mapping.png","slug":"story_mapping.png","post":"citbk7qdr000bhgou1wi5yf3o","modified":0,"renderable":0},{"_id":"source/_drafts/outsourcing-product-development/value.png","slug":"value.png","post":"citbk7qcv0000hgou3js5rbjp","modified":1,"renderable":0},{"_id":"source/_drafts/outsourcing-product-development/ratio.png","slug":"ratio.png","post":"citbk7qcv0000hgou3js5rbjp","modified":1,"renderable":0},{"_id":"source/_drafts/outsourcing-product-development/weighting.png","slug":"weighting.png","post":"citbk7qcv0000hgou3js5rbjp","modified":1,"renderable":0},{"_id":"source/_drafts/outsourcing-product-development/questionnaire.xlsx","slug":"questionnaire.xlsx","post":"citbk7qcv0000hgou3js5rbjp","modified":1,"renderable":0}],"PostCategory":[],"PostTag":[{"post_id":"citbk7qcv0000hgou3js5rbjp","tag_id":"citbk7qd10001hgouby04ygum","_id":"citbk7qdc0004hgou4u2th44k"},{"post_id":"citbk7qcv0000hgou3js5rbjp","tag_id":"citbk7qdb0002hgougat4t223","_id":"citbk7qdd0005hgou2n4t9wsc"},{"post_id":"citbk7qcv0000hgou3js5rbjp","tag_id":"citbk7qdb0003hgousjelyl08","_id":"citbk7qdd0006hgoua4ybhpsz"},{"post_id":"citbk7qdl0007hgoupe76vv2r","tag_id":"citbk7qdr000ahgou6yije8i5","_id":"citbk7qdv000ehgouigceuxkd"},{"post_id":"citbk7qdl0007hgoupe76vv2r","tag_id":"citbk7qdb0002hgougat4t223","_id":"citbk7qdv000fhgouppfa2wfa"},{"post_id":"citbk7qdl0007hgoupe76vv2r","tag_id":"citbk7qdt000chgouk5cs8voo","_id":"citbk7qdw000hhgoub4iezuos"},{"post_id":"citbk7qdr000bhgou1wi5yf3o","tag_id":"citbk7qd10001hgouby04ygum","_id":"citbk7qdw000ihgou2yyrfoxc"},{"post_id":"citbk7qdr000bhgou1wi5yf3o","tag_id":"citbk7qdt000chgouk5cs8voo","_id":"citbk7qdw000jhgou6mh8gi28"},{"post_id":"citbk7qdr000bhgou1wi5yf3o","tag_id":"citbk7qdv000ghgoue07ewydf","_id":"citbk7qdw000khgoux43q6qpm"}],"Tag":[{"name":"DDD","_id":"citbk7qd10001hgouby04ygum"},{"name":"product management","_id":"citbk7qdb0002hgougat4t223"},{"name":"aglie","_id":"citbk7qdb0003hgousjelyl08"},{"name":"planning","_id":"citbk7qdr000ahgou6yije8i5"},{"name":"agile","_id":"citbk7qdt000chgouk5cs8voo"},{"name":"scrum","_id":"citbk7qdv000ghgoue07ewydf"}]}}